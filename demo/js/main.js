// Generated by CoffeeScript 1.8.0
(function() {
  var Body, Force, M, N, PI, Runner, SE2, Solver, TBS, abs, atan2, cos, runWorld, sin, spring, sqrt, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  N = numeric;

  _ref = M = Math, abs = _ref.abs, sin = _ref.sin, cos = _ref.cos, atan2 = _ref.atan2, sqrt = _ref.sqrt, PI = _ref.PI;

  Force = yaya.Force, SE2 = yaya.SE2, Body = yaya.Body, Solver = yaya.Solver;

  spring = function(k, d0) {
    return function(t) {
      var d, v;
      v = this.bodyN.frame.pos.minus(this.bodyP.frame.pos);
      v.th = 0;
      d = N.norm2([v.x, v.y]);
      d = M.max(d, 1e3 * N.epsilon);
      return new Force(v.scale(k * (1 - d0 / d)));
    };
  };

  TBS = function() {
    var b1, b2, w;
    w = new yaya('#main', {
      timeScale: 10000,
      spaceScale: 200
    });
    b1 = w.addBody('b1', new Body(1, 1, {
      pos: SE2(1, 1, 0)
    }), 'M 0 50 L -25 0 25 0 Z');
    b2 = w.addBody('b2', new Body(2, 1, {
      pos: SE2(2, 3, 0)
    }), 'M 100 0 Q 0 50 -100 0 Q 0 -50 100 0');
    w.forceFuncs.add(b1, b2, spring(1, 1));
    return w;
  };

  Runner = (function() {
    function Runner(tMax, cb) {
      this.tMax = tMax;
      this.cb = cb;
      this.handler = __bind(this.handler, this);
      this.reset();
    }

    Runner.prototype.reset = function() {
      this.t = 0;
      return this.running = false;
    };

    Runner.prototype.start = function() {
      this.running = true;
      this.msLast = null;
      return this.next();
    };

    Runner.prototype.pause = function() {
      return this.running = false;
    };

    Runner.prototype.next = function() {
      return window.requestAnimationFrame(this.handler);
    };

    Runner.prototype.handler = function(ms) {
      var dt;
      if (!this.running || this.t > this.tMax) {
        this.running = false;
        return;
      }
      if (this.msLast == null) {
        this.msLast = ms;
        this.next();
        return;
      }
      dt = ms - this.msLast;
      this.msLast = ms;
      this.t += dt;
      if (this.t > this.tMax) {
        return;
      }
      this.cb(this.t, dt);
      this.next();
    };

    return Runner;

  })();

  runWorld = function(w, duration) {
    var a, fps, r;
    w.solver = Solver.verletFixed;
    w._getAcc(0);
    fps = 0;
    a = 0.1;
    r = new Runner(duration, function(t, dt) {
      fps = (1 - a) * fps + a * (1000 / dt);
      $('#disp_fps').text(fps.toFixed(0));
      $('#disp_time').text(t.toFixed(0));
      return w.update(t);
    });
    $('#btn_start').on('click', function() {
      return r.start();
    });
    return $('#btn_pause').on('click', function() {
      return r.pause();
    });
  };

  window.w = TBS();

  runWorld(w, 100000);

}).call(this);

//# sourceMappingURL=main.js.map
