// Generated by CoffeeScript 1.8.0
(function() {
  var Body, Force, M, N, PI, Runner, SE2, Solver, TBS, TBS3, WP0, WP1, a, abs, atan2, b, bindings, cos, runWorld, sin, spring, sqrt, uniformGravity, _i, _j, _len, _len1, _ref, _ref1, _ref2, _ref3, _ref4,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  N = numeric;

  _ref = M = Math, abs = _ref.abs, sin = _ref.sin, cos = _ref.cos, atan2 = _ref.atan2, sqrt = _ref.sqrt, PI = _ref.PI;

  Force = yaya.Force, SE2 = yaya.SE2, Body = yaya.Body, Solver = yaya.Solver;

  spring = function(k, d0) {
    return function(t) {
      var d, v;
      v = this.bodyN.frame.pos.minus(this.bodyP.frame.pos);
      v.th = 0;
      d = N.norm2([v.x, v.y]);
      d = M.max(d, 1e3 * N.epsilon);
      return new Force(v.scale(k * (1 - d0 / d)));
    };
  };

  uniformGravity = function(g) {
    return function(t, body, id) {
      return new Force(0, -g * body.m, 0);
    };
  };

  TBS = function() {
    var b1, b2, w;
    window.main.setAttribute('viewBox', '-100 -600 800 600');
    w = new yaya('#main', {
      timeScale: 10000,
      spaceScale: 200
    });
    b1 = w.addBody('b1', new Body(1, 1, {
      pos: SE2(1, 1, 0)
    }), 'M 0 25 L -25 -25 25 -25 Z');
    b2 = w.addBody('b2', new Body(2, 1, {
      pos: SE2(2, 3, 0)
    }), 'M 100 0 Q 0 50 -100 0 Q 0 -50 100 0');
    w.forceFuncs.add(b1, b2, spring(1, 1));
    return w;
  };

  TBS3 = function() {
    var b1, b2, w;
    w = new yaya('#main', {
      timeScale: 10000,
      spaceScale: 200
    });
    b1 = w.addBody('b1', new Body(1, 1, {
      pos: SE2(1, 1, 0)
    }), 'M 0 25 L -25 -25 25 -25 Z');
    b2 = w.addBody('b2', new Body(2, 1, {
      pos: SE2(2, 3, 0)
    }), 'M 100 0 Q 0 50 -100 0 Q 0 -50 100 0');
    window.p = SE2(1, 1, 0);
    b1.drive = {
      type: 'pos',
      func: function(t, dt) {
        return window.p;
      }
    };
    return w;
  };

  WP0 = function() {
    var b0, b1, w;
    w = new yaya('#main', {
      timeScale: 10000,
      spaceScale: 200
    });
    b0 = w.addBody('b0', new Body(1000, 1000), 'M 150 -100 Q 0 50 -150 -100 H -180 V 25 H 180 V -100 Z');
    b1 = w.addBody('b1', new Body(1, 1), 'M 10 -10 H -10 V 10 H 10 V -10');
    window.p = SE2(0, 0.5, 0);
    b1.drive = {
      type: 'pos',
      func: function(t, dt) {
        return window.p;
      }
    };
    return w;
  };

  WP1 = function(n) {
    var i, pos, w, wok, _i;
    w = new yaya('#main', {
      timeScale: 10000,
      spaceScale: 200
    });
    wok = w.addBody('wok', new Body(1000, 1000), 'M 150 -100 Q 0 50 -150 -100 H -180 V 25 H 180 V -100 Z');
    wok.drive = {
      type: 'pos',
      func: function() {
        return SE2(0, 0, 0);
      }
    };
    for (i = _i = 1; 1 <= n ? _i <= n : _i >= n; i = 1 <= n ? ++_i : --_i) {
      pos = new SE2((i - n / 2) * .2, M.random() * .5 + 1, M.random() * PI * 2);
      w.addBody("potato" + i, new Body(5, 5, {
        pos: pos
      }), 'M 10 -10 H -10 V 10 H 10 V -10');
    }
    w.fields.push(uniformGravity(10));
    return w;
  };

  Runner = (function() {
    function Runner(tMax, cb) {
      this.tMax = tMax;
      this.cb = cb;
      this.handler = __bind(this.handler, this);
      this.reset();
    }

    Runner.prototype.reset = function() {
      this.t = 0;
      return this.running = false;
    };

    Runner.prototype.start = function() {
      this.running = true;
      this.msLast = null;
      return this.next();
    };

    Runner.prototype.pause = function() {
      return this.running = false;
    };

    Runner.prototype.next = function() {
      return window.requestAnimationFrame(this.handler);
    };

    Runner.prototype.handler = function(ms) {
      var dt;
      if (!this.running || this.t > this.tMax) {
        this.running = false;
        return;
      }
      if (this.msLast == null) {
        this.msLast = ms;
        this.next();
        return;
      }
      dt = ms - this.msLast;
      this.msLast = ms;
      this.t += dt;
      if (this.t > this.tMax) {
        return;
      }
      this.cb(this.t, dt);
      this.next();
    };

    return Runner;

  })();

  runWorld = function(w, duration) {
    var a, fps, r;
    w.solver = Solver.verletFixed;
    w._getAcc(0);
    fps = 0;
    a = 0.1;
    r = new Runner(duration, function(t, dt) {
      fps = (1 - a) * fps + a * (1000 / dt);
      $('#disp_fps').text(fps.toFixed(0));
      $('#disp_time').text(t.toFixed(0));
      return w.update(t);
    });
    $('#btn_start').on('click', function() {
      return r.start();
    });
    return $('#btn_pause').on('click', function() {
      return r.pause();
    });
  };

  window.w = WP1(10);

  runWorld(w, Infinity);

  bindings = new Keys.Bindings();

  _ref1 = [['up', 'W'], ['down', 'S'], ['left', 'A'], ['right', 'D'], ['CCW', 'Q'], ['CW', 'E'], ['speedup', 'R'], ['speeddown', 'F']];
  for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
    _ref2 = _ref1[_i], a = _ref2[0], b = _ref2[1];
    bindings.add(a, new Keys.Combo(Keys.Key[b]));
  }

  window.speed = 0.01;

  _ref3 = [
    [
      'up', function() {
        return p.y += window.speed;
      }
    ], [
      'down', function() {
        return p.y -= window.speed;
      }
    ], [
      'left', function() {
        return p.x -= window.speed;
      }
    ], [
      'right', function() {
        return p.x += window.speed;
      }
    ], [
      'CCW', function() {
        return p.th += window.speed;
      }
    ], [
      'CW', function() {
        return p.th -= window.speed;
      }
    ], [
      'speedup', function() {
        return window.speed *= 1.5;
      }
    ], [
      'speeddown', function() {
        return window.speed /= 1.5;
      }
    ]
  ];
  for (_j = 0, _len1 = _ref3.length; _j < _len1; _j++) {
    _ref4 = _ref3[_j], a = _ref4[0], b = _ref4[1];
    bindings.registerHandler(a, b);
  }

}).call(this);

//# sourceMappingURL=main.js.map
